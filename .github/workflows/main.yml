name: Setup macOS VNC Server

on:
  workflow_dispatch:

jobs:
  vnc-server:
    runs-on: macos-latest

    steps:
    - name: Включить совместное использование экрана
      run: |
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
          -activate \
          -configure -access -on \
          -users $(whoami) \
          -privs -all

    - name: Установить пароль для VNC
      run: |
        # Убедитесь, что пароль содержит максимум 8 символов
        PASSWORD="${{ secrets.VNC_PASSWORD }}" 
        HEX_PW=$(echo -n "$PASSWORD" | xxd -p | tr -d '\n')
        sudo defaults write /Library/Preferences/com.apple.RemoteManagement VNCPassword "$HEX_PW"
        sudo defaults write /Library/Preferences/com.apple.RemoteManagement VNCAlwaysStartOnConsole -bool true
        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -restart -agent -console

    - name: Установить ngrok
      run: |
        brew install ngrok

    - name: Настроить ngrok
      run: |
        mkdir -p ~/.ngrok2
        echo "authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}" > ~/.ngrok2/ngrok.yml

    - name: Запустить туннель ngrok для VNC
      id: ngrok
      run: |
        ngrok tcp 5900 --config ~/.ngrok2/ngrok.yml > ngrok.log &
        sleep 15
        # Извлечь публичный адрес
        NGROK_TCP=$(grep -o "0\.tcp\.ngrok\.io:[0-9]*" ngrok.log | head -n1)
        HOST=$(echo $NGROK_TCP | cut -d':' -f1)
        PORT=$(echo $NGROK_TCP | cut -d':' -f2)
        echo "host=$HOST" >> $GITHUB_OUTPUT
        echo "port=$PORT" >> $GITHUB_OUTPUT

    - name: Показать адрес для подключения
      run: |
        echo "VNC доступен по адресу: ${{ steps.ngrok.outputs.host }}:${{ steps.ngrok.outputs.port }}"

    - name: Поддерживать работу Runner
      run: |
        while true; do sleep 60; done
