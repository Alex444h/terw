name: Setup macOS VNC Server with ngrok

on:
  workflow_dispatch:

jobs:
  vnc-server:
    runs-on: macos-latest
    timeout-minutes: 360  # Максимальное время выполнения: 6 часов

    steps:
      - name: Check current user
        run: whoami

      - name: Enable Screen Sharing and set VNC password
        env:
          VNC_PASSWORD: Passwrd1  # Пароль ровно из 8 символов
        run: |
          # Проверка длины пароля
          if [ ${#VNC_PASSWORD} -ne 8 ]; then
            echo "VNC_PASSWORD must be exactly 8 characters."
            exit 1
          fi

          # Конвертация пароля в шестнадцатеричный формат
          HEX_PW=$(echo -n "$VNC_PASSWORD" | xxd -p | tr -d '\n')

          # Настройка VNC-сервера в Legacy Mode
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -activate \
            -configure \
            -access -on \
            -users "runner" \
            -privs -all \
            -clientopts -setvnclegacy yes \
            -clientopts -setvncpw "$HEX_PW" \
            -restart -agent -console

      - name: Check VNC server status
        run: |
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -status
        shell: bash

      - name: Install ngrok
        run: |
          brew install --cask ngrok

      - name: Setup ngrok config
        run: |
          mkdir -p ~/.ngrok2
          cat <<EOF > ~/.ngrok2/ngrok.yml
          version: "2"
          authtoken: "${{ secrets.NGROK_AUTH_TOKEN }}"
          tunnels:
            vnc:
              proto: tcp
              addr: 5900
          EOF

      - name: Verify ngrok config
        run: |
          cat ~/.ngrok2/ngrok.yml
        shell: bash

      - name: Start ngrok tunnel
        id: ngrok
        run: |
          # Запуск ngrok в фоновом режиме
          nohup ngrok start vnc --config ~/.ngrok2/ngrok.yml > ngrok.log 2>&1 &
          sleep 60  # Увеличенное время ожидания для установления туннеля

          # Проверка, запущен ли ngrok
          if ! pgrep ngrok > /dev/null; then
            echo "ngrok failed to start. Check ngrok.log:"
            cat ngrok.log
            exit 1
          fi

          # Ждём, пока API ngrok станет доступным
          until curl --silent http://localhost:4040/api/tunnels > /dev/null; do
            echo "Waiting for ngrok API to be available..."
            sleep 5
          done

          # Получение публичного URL через API ngrok
          PUBLIC_URL=$(curl --silent http://localhost:4040/api/tunnels | grep -o '"public_url":"tcp://[^"]*' | grep -o 'tcp://[^"]*')

          if [ -z "$PUBLIC_URL" ]; then
            echo "Failed to retrieve ngrok public URL."
            cat ngrok.log
            exit 1
          fi

          # Извлечение host и port из PUBLIC_URL
          HOST=$(echo $PUBLIC_URL | cut -d':' -f2 | tr -d '/')
          PORT=$(echo $PUBLIC_URL | cut -d':' -f3)

          # Установка переменных окружения для использования в далее шагах
          echo "host=$HOST" >> $GITHUB_ENV
          echo "port=$PORT" >> $GITHUB_ENV

      - name: Display VNC connection details
        run: |
          echo "VNC доступен по адресу: ${{ env.host }}:${{ env.port }}"
          echo "Логин: runner"
          echo "Пароль: Passwrd1"

      - name: Keep Runner Alive
        run: |
          echo "VNC session active. It will be closed in 6 hours."
          sleep 21600  # 6 часов в секундах
